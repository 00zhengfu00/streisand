SSH
===

Windows
-------
1. Download [PuTTY](http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html) and run it
2. Go to the Session section
3. Enter '{{ ansible_default_ipv4.address }}' in the Host Name field and '22' in the Port field
4. Go to Connection --> Data
5. Enter 'forward' in the Auto-login username field
6. Go to Connection --> SSH --> Tunnels
7. Enter '{{ ssh_default_socks_port }}' in the Source port field
8. Make sure the 'Auto' and 'Dynamic' radio buttons are selected
9. Click 'Add' to add the tunnel. You should see 'D{{ ssh_default_socks_port }}' in the Forwarded ports box
10. Go to Connection --> SSH --> Auth
11. Click the 'Browse' button and select the 'streisand_rsa' file that is located in the same folder as these instructions
12. Go back to Session (the very first item in the left-hand menu)
13. Enter '{{ ansible_hostname }}' in the first Saved Sessions box and click the 'Save' button. The next time you launch PuTTY you can choose the session and click 'Load' to restore all of these settings.
14. Click 'Open' to connect!

You are now connected and have a SOCKS proxy up and running that is ready to forward encrypted traffic through SSH. The next step is to configure your web browser to use it. Skip to the "Configuring Firefox to connect through a SOCKS proxy" section for instructions on how to do this.

Linux and OS X
--------------
1. Add a new entry to your .ssh/config file. It should look like this. Be sure to adjust the location of the IdentityFile (if necessary):

         Host {{ ansible_hostname }}
           User         forward
           Port         22
           HostName     {{ ansible_default_ipv4.address }}
           IdentityFile {{ streisand_local_directory }}/ssh/streisand_rsa

2. Download [sshuttle](https://github.com/apenwarr/sshuttle) by running the following command in the directory of your choice:

  `git clone https://github.com/apenwarr/sshuttle.git`

3. Enter the directory

   `cd sshuttle`

4. Run sshuttle and connect to the server

   `sshuttle --dns -r forward@{{ ansible_hostname }} 0/0 -vv`

5. All of your traffic, including DNS, is now being transparently forwarded through an encrypted SSH connection. You can verify that everything is working properly by visiting the Tor Project's check page, [Are you using Tor?](https://check.torproject.org/) It should show "Your IP address appears to be: {{ ansible_default_ipv4.address }}".

Linux and OS X (alternate)
--------------------------
Sshuttle offers significantly faster performance and is easier to set up, but the following instructions will also work if you are in a situation where you cannot install it.

1. Add a new entry to your .ssh/config file. It should look like this. Be sure to adjust the location of the IdentityFile (if necessary):

         Host {{ ansible_hostname }}
           User         forward
           Port         22
           HostName     {{ ansible_default_ipv4.address }}
           IdentityFile {{ streisand_local_directory }}/ssh/streisand_rsa

2. SSH into the server and forward a dynamic SOCKS port

   `ssh -D {{ ssh_default_socks_port }} forward@{{ ansible_hostname }}`

3. You are now connected and have a SOCKS proxy up and running that is ready to forward encrypted traffic through SSH. The next step is to configure your web browser to use it.

Configuring Firefox to connect through a SOCKS proxy
----------------------------------------------------
1. Go to Edit --> Preferences
2. Click the Advanced icon
3. Go to the Network tab
4. Click the 'Settings' button to "Configure how Firefox connects to the Internet"
5. Choose 'Manual proxy configuration'
6. Enter '127.0.0.1' and Port '{{ ssh_default_socks_port }}' on the SOCKS Host line
7. Click 'OK'
8. Close the Firefox preferences window. Now we need to configure Firefox to send all DNS requests through the SOCKS proxy. This will protect you against DNS poisoning and ensure that false DNS entries cannot be used to censor your access.
9.  Type 'about:config' into the address bar and hit Enter
10. You should see a screen that says "This might void your warranty!" Click the 'I'll be careful, I promise!' button.
11. Search for 'socks_remote_dns' and double click on the value that is returned. It will change from 'false' to 'true'.
12. You should be good to go! You can verify that your traffic is being routed properly by visiting the Tor Project's check page, [Are you using Tor?](https://check.torproject.org/) It should show "Your IP address appears to be: {{ ansible_default_ipv4.address }}".
