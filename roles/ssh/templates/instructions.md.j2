SSH Tunnel
==========

Windows
-------
1. Download [PuTTY](http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html) and run it
2. Go to the Session section
3. Enter '{{ streisand_ipv4_address }}' in the Host Name field and '22' in the Port field
4. Go to Connection --> Data
5. Enter 'forward' in the Auto-login username field
6. Go to Connection --> SSH --> Tunnels
7. Enter '{{ ssh_default_socks_port }}' in the Source port field
8. Make sure the 'Auto' and 'Dynamic' radio buttons are selected
9. Click 'Add' to add the tunnel. You should see 'D{{ ssh_default_socks_port }}' in the Forwarded ports box
10. Go to Connection --> SSH --> Auth
11. Click the 'Browse' button and select the 'streisand_rsa' file that is located in the same folder as these instructions
12. Go back to Session (the very first item in the left-hand menu)
13. Enter '{{ streisand_server_name }}' in the first Saved Sessions box and click the 'Save' button. The next time you launch PuTTY you can choose the session and click 'Load' to restore all of these settings.
14. Click 'Open' to connect!

You are now connected and have a SOCKS proxy up and running that is ready to forward encrypted traffic through SSH. The next step is to configure your web browser to use it.

### Configuring Firefox to connect through a SOCKS proxy ###
1. Go to Edit --> Preferences
2. Click the Advanced icon
3. Go to the Network tab
4. Click the 'Settings' button to "Configure how Firefox connects to the Internet"
5. Choose 'Manual proxy configuration'
6. Enter '127.0.0.1' and Port '{{ ssh_default_socks_port }}' on the SOCKS Host line
7. Click 'OK'
8. Close the Firefox preferences window. Now we need to configure Firefox to send all DNS requests through the SOCKS proxy. This will protect you against DNS poisoning and ensure that false DNS entries cannot be used to censor your access.
9.  Type 'about:config' into the address bar and hit Enter
10. You should see a screen that says "This might void your warranty!" Click the 'I'll be careful, I promise!' button.
11. Search for 'socks_remote_dns' and double click on the value that is returned. It will change from 'false' to 'true'.
12. You should be good to go! You can verify that your traffic is being routed properly by visiting the Tor Project's check page, [Are you using Tor?](https://check.torproject.org/) It should say 'Your IP address appears to be: {{ streisand_ipv4_address }}'.

Linux and OS X
--------------
1. Add a new entry to your .ssh/config file. It should look like this. Be sure to adjust the location of the IdentityFile (if necessary):

         Host {{ streisand_server_name }}
           User         forward
           Port         22
           HostName     {{ streisand_ipv4_address }}
           IdentityFile {{ streisand_local_directory }}/ssh/streisand_rsa

2. Download [sshuttle](https://github.com/apenwarr/sshuttle) by running the following command in the directory of your choice:

  `git clone https://github.com/apenwarr/sshuttle.git`

3. Enter the directory

   `cd sshuttle`

4. Run sshuttle and connect to the server

   `sshuttle --dns -r forward@{{ streisand_server_name }} 0/0 -vv`

5. All of your traffic, including DNS, is now being transparently forwarded through an encrypted SSH connection. You can verify that everything is working properly by visiting the Tor Project's check page, [Are you using Tor?](https://check.torproject.org/) It should say 'Your IP address appears to be: {{ streisand_ipv4_address }}'.

Linux and OS X (alternate)
--------------------------
Sshuttle offers significantly faster performance and is easier to set up, but the following instructions will also work if you are in a situation where you cannot install it.

1. Add a new entry to your .ssh/config file. It should look like this. Be sure to adjust the location of the IdentityFile (if necessary):

         Host {{ streisand_server_name }}
           User         forward
           Port         22
           HostName     {{ streisand_ipv4_address }}
           IdentityFile {{ streisand_local_directory }}/ssh/streisand_rsa

2. SSH into the server and forward a dynamic SOCKS port

   `ssh -D {{ ssh_default_socks_port }} forward@{{ streisand_server_name }}`

3. You are now connected and have a SOCKS proxy up and running that is ready to forward encrypted traffic through SSH. The next step is to configure your web browser to use it. You can follow the same instructions contained in the Windows section above to configure Firefox to route its traffic through the SOCKS proxy.

Android
-------
1. Install [SSH persistent tunnels](https://play.google.com/store/apps/details?id=org.ayal.SPT) by Shai Ayal. This application makes it easy to forward multiple ports through an SSH tunnel, and it does a decent job of ensuring that the tunnels remain active even when you switch back and forth regularly between LTE, 3G, and WiFi. The app is [open source](https://code.google.com/p/ssh-persistent-tunnel/) and can be compiled for free, but the Play Store version costs $1.50.
2. Copy the 'streisand_rsa' file to the root directory of your phone. This file is located in the same folder as these instructions.
3. Start the application. It will be listed as 'SPT' in your launcher, and its icon looks like a train tunnel.
4. Tap the menu icon in the lower-right of your screen
5. Tap 'Settings'
6. Tap 'Host name' and enter '{{ streisand_ipv4_address }}'
7. Tap 'User Name' and enter 'forward'
8. Tap 'Port' and enter '22'
9. Tap 'Private Key File' and select the 'streisand_rsa' file that you copied to your phone in step 2
10. Tap 'Dynamic Forward Port' and enter '1080'
11. Tap 'Forwards' and enter 'L8888=localhost:8888'
12. Go back and tap the 'Connect Tunnel' button

You are now ready to configure your applications to route their traffic through the SSH tunnel provided by SPT.

### Configuring Android to route most of its traffic through SPT ###
These steps will only work when you are connected via WiFi. They also must be applied individually to every WiFi network you connect to. Most applications will respect these settings, including the default browser, Chrome, YouTube, and many more.

1. Open your phone's Settings
2. Tap 'Wi-Fi' in the 'Wireless & Networks' section
3. Long-press on the WiFi network you are currently connected to. A pop-up menu will appear.
4. Tap 'Modify network'
5. Tap 'Show advanced options'
6. Select 'Manual' in the Proxy section
7. Tap 'Proxy hostname' and enter '127.0.0.1'
8. Tap 'Proxy port' and enter '8888'
9. Tap 'Save'

Some applications allow you to make these settings persistent for all networks. Twitter for Android and Firefox for Android can route their traffic through the SPT SSH tunnel regardless of your current connection (WiFi, 3G, HSPA+, LTE, etc.).

### Configuring Twitter for Android to use SPT ###
1. Open Twitter
2. Tap the three dots in the upper-right of the screen to open the menu
3. Choose 'Settings'
4. Tap 'General'
5. Tap 'Proxy'
6. Check the 'Enable HTTP Proxy' checkbox
7. Tap 'Proxy Host' and enter '127.0.0.1'
8. Tap 'Proxy Port' and enter '8888'

### Configuring Firefox for Android to use SPT ###
1. Open Firefox
2. Type "about:config" into the address bar and tap the 'Go' button on your keyboard
3. Type "proxy" into the search box
4. Set the value of 'network.proxy.socks' to '127.0.0.1'
5. Set the value of 'network.proxy.socks_port' to '1080'
6. Set the value of 'network.proxy.socks\_remote\_dns' to 'true'
7. Set the value of 'network.proxy.type' to '1'
