---
- name: Get the default SSH key
  command: cat ~/.ssh/id_rsa.pub
  register: ssh_key

- name: Get the latest 'Debian 7.0 x64' image ID from the Linode API
  shell: curl -s 'https://api.linode.com/?api_key={{ linode_api_key }}&api_action=avail.distributions' | ruby -e 'require "json"; api_response=JSON.parse(ARGF.read); target_image = api_response["DATA"].select { |image| image["LABEL"] == "Debian 7.5" }.first; puts target_image["DISTRIBUTIONID"]'
  register: linode_debian7_x64_distribution_id

- name: Create the server
  linode: api_key="{{ linode_api_key }}"
          name="{{ linode_server_name }}"
          plan="{{ linode_plan_id }}"
          datacenter="{{ linode_datacenter }}"
          distribution="{{ linode_debian7_x64_distribution_id.stdout }}"
          ssh_pub_key="{{ ssh_key.stdout }}"
          wait=yes
  register: streisand_server

- name: Wait until the server has finished booting and OpenSSH is accepting connections
  shell: curl --silent --max-time 5 {{ streisand_server.instance.ipv4 }}:22 | grep 'SSH'
  register: connection_attempt
  until: connection_attempt | success
  retries: 20

- name: Create the in-memory inventory group
  add_host: name={{ streisand_server.instance.ipv4 }}
            groups=streisand-host

- name: Set the streisand_ipv4_address variable
  set_fact: streisand_ipv4_address="{{ streisand_server.instance.ipv4 }}"

- name: Set the streisand_server_name variable
  set_fact: streisand_server_name="{{ linode_server_name }}"
