OpenVPN (wrapped in stunnel)
============================
*Note: These instructions should only be used if OpenVPN connections are being actively blocked in your country or by your ISP. Performance will be better if you are able to connect directly, but certain countries (notably China and Iran) employ Deep Packet Inspection to detect and thwart OpenVPN connections. Some companies do the same. If you do not fall into this category, please refer to the OpenVPN 'instructions.html' file instead.*

*Following these steps will wrap your OpenVPN traffic in an encrypted tunnel so it looks like standard SSL traffic being directed to a port where this type of traffic would be expected. This prevents DPI from identifying the true nature of the packets, thereby allowing you to freely use OpenVPN.*

### A note on client files ###
For security reasons, OpenVPN clients typically have their own unique certificate and private key. The server you are connecting to has been configured to allow clients to share the same certificate and private key, but you may still wish to give your phone and laptop different keys, for example. The client files are located in the client-files subdirectory of the folder containing these instructions. Five unique sets are generated by default.

Most modern clients are able to use OpenVPN profiles (.ovpn files) and you will not need to copy anything else. However, there are some clients that may need you to specify individual files for the certificate, key, tls-auth, etc. These files are also provided in each client folder, just in case.

Windows
-------
### Stunnel Setup ###
1. Download and run the [stunnel installer](http://www.stunnel.org/downloads.html) exe
2. Open the directory where you installed stunnel. For most users, this will either be in C:\Program Files\stunnel or C:\Program Files (x86)\stunnel.
3. Drag and drop the stunnel.conf file from the client-files folder into this directory. The client-files folder is located in the same directory as these instructions.
4. Double click stunnel.exe in the installation directory to start the service.

Now you are ready to install OpenVPN and configure it to route its traffic through stunnel. A prepackaged .ovpn profile that is preconfigured to work alongside the stunnel.conf file will make this easy.

### OpenVPN Setup ###
1. Download and run the OpenVPN [Windows Installer](https://openvpn.net/index.php/open-source/downloads.html)
2. Click 'Next' and accept the license agreement by clicking 'I Agree'
3. Click 'Next' on the 'Choose Components' screen. Leave all of the default options checked.
4. Make note of the Destination Folder. This is where you will place the client configuration after installation. Click 'Install'.
5. A Windows Security notice will appear and ask 'Would you like to install this device software?'. Click 'Install'.
6. Click 'Next' on the 'Installation Complete' screen
7. Uncheck 'Show Readme' and click 'Finish'
8. Right-click on the OpenVPN GUI desktop icon and choose 'Properties'
9. Go to the 'Compatibility' tab and click the 'Run this program as an administrator' checkbox in the 'Privilege Level' section
10. Double-click the OpenVPN GUI desktop icon to launch the application
11. Open the 'config' directory that is located in the Destination Folder. For most users, this will either be in C:\Program Files\OpenVPN\config or C:\Program Files (x86)\OpenVPN\config. You will see a single README file in this directory.
12. Drag and drop a '{{ openvpn_stunnel_profile_filename }}' file from one of the client-files folders to this location alongside the README. The client-files folders are located in the same directory as these instructions.
13. Right-click on the OpenVPN icon in your taskbar and choose 'Connect'
14. You will see a log scroll by as the connection is established, followed by a taskbar notification indicating your assigned IP
15. Success! You can verify that your traffic is being routed properly by visiting the Tor Project's check page, [Are you using Tor?](https://check.torproject.org/) It should say 'Your IP address appears to be: {{ streisand_ipv4_address }}'.

OS X
----
### Stunnel Setup ###
1. Install [Homebrew](http://brew.sh/), if you haven't already
2. Install stunnel using Homebrew

   `brew install stunnel`
3. Replace the default stunnel.conf file with the customized version. Be sure to update the source location if you have moved the directory elsewhere.

   `cp {{ streisand_local_directory }}/openvpn/client-files/stunnel.conf /usr/local/etc/stunnel/`
4. Start stunnel

   `stunnel`

Now you are ready to install OpenVPN and configure it to route its traffic through stunnel. A prepackaged .ovpn profile that is preconfigured to work alongside the stunnel.conf file will make this easy.

### OpenVPN Setup ###
1. Download and open [Tunnelblick](https://code.google.com/p/tunnelblick/). **Mavericks users must install the latest Beta Release at this time.**
2. Click 'Install'
3. Click 'Launch' after the installation is finished
4. Enter your password and click 'OK' if Tunnelblick asks to 'repair ownership/permissions'
5. Click the 'Open configuration folder' button on the 'Welcome to Tunnelblick' screen
6. Drag and drop a '{{ openvpn_stunnel_profile_filename }}' file from one of the client-files folders to the folder that was opened. The client-files folders are located in the same directory as these instructions. You may need to enter your password in order to authorize Finder to copy the file to this location.
7. Look for the Tunnelblick icon in your menu bar. Click on it, and choose 'Connect'. You will see an animation while the connection is being established. You can also click on the icon and choose 'Details' to see a log of what is happening.
8. Success! You can verify that your traffic is being routed properly by visiting the Tor Project's check page, [Are you using Tor?](https://check.torproject.org/) It should say 'Your IP address appears to be: {{ streisand_ipv4_address }}'.

Linux
----
### Stunnel Setup ###
1. Make sure stunnel is installed

   `sudo apt-get install stunnel` OR `sudo yum install stunnel` OR `esoteric-package-manager hipster stunnel`
2. Copy stunnel.conf to the right destination. Be sure to update the source location if you have moved the directory elsewhere.

   `cp {{ streisand_local_directory }}/openvpn/client-files/stunnel.conf /etc/stunnel/`
3. Restart the stunnel service

   `sudo service stunnel4 restart` OR `sudo service stunnel restart`

Now you are ready to install OpenVPN and configure it to route its traffic through stunnel. A prepackaged .ovpn profile that is preconfigured to work alongside the stunnel.conf file will make this easy.

### OpenVPN Setup ###
1. Install OpenVPN

   `sudo apt-get install openvpn` OR `sudo yum install openvpn` OR `esoteric-package-manager hipster openvpn`
2. Copy a '{{ openvpn_stunnel_profile_filename }}' file from one of the client-files folders to the location of your choice. /etc/openvpn/ is a decent option.
3. Execute OpenVPN, and pass it the .ovpn profile as an option.

   `sudo openvpn {{ openvpn_stunnel_profile_filename }}`
4. Success! You can verify that your traffic is being routed properly by visiting the Tor Project's check page, [Are you using Tor?](https://check.torproject.org/) It should say 'Your IP address appears to be: {{ streisand_ipv4_address }}'.

The OpenVPN plugin for NetworkManager appears to become very confused as to how it should route traffic when you connect to an OpenVPN server through a wrapped stunnel connection. Manually adding route information does not seem to help. Therefore, unlike in the non-stunnel instructions, the steps above are the recommended connection method for Ubuntu as well.

Android
----
### SSLDroid Setup ###
1. Copy the 'stunnel.p12' to your phone from the client-files directory. The client-files folder is located in the same directory as these instructions.
2. Install [SSLDroid](https://play.google.com/store/apps/details?id=hu.blint.ssldroid) and launch it
3. Tap the menu button in the lower-right corner of the screen
4. Tap 'Add tunnel'
5. Tap 'Tunnel name' and enter '{{ streisand_server_name }}'
6. Tap 'Local port' and enter '{{ stunnel_local_port }}'
7. Tap 'Remote host' and enter '{{ openvpn_server }}'
8. Tap 'Remote port' and enter '{{ stunnel_remote_port }}'
9. Tap the browse button next to 'PKCS12 file' and select the 'stunnel.p12' file that you copied to your phone during the first step. You can leave 'PKCS12 pass' blank.
10. Tap 'Apply'

Now you are ready to install OpenVPN for Android and configure it to route its traffic through SSLDroid, which is connecting the stunnel port on the remote server. A prepackaged .ovpn profile that is preconfigured to work alongside SSLDroid will make this easy.

### OpenVPN Setup ###
1. Install [OpenVPN for Android](https://play.google.com/store/apps/details?id=de.blinkt.openvpn)
2. Copy a '{{ openvpn_stunnel_profile_filename }}' file from one of the client-files folders to your phone. The client-files folders are located in the same directory as these instructions.
3. Launch OpenVPN for Android
4. Tap the folder icon in the lower-right of the screen
5. Select the '{{ openvpn_stunnel_profile_filename }}' profile that you copied to your phone
6. Tap the save icon (floppy disk) in the lower-right of the screen after the import is complete
7. Tap the profile
8. Accept the Android VPN connection warning
9. Success! You can verify that your traffic is being routed properly by visiting the Tor Project's check page, [Are you using Tor?](https://check.torproject.org/) It should say 'Your IP address appears to be: {{ streisand_ipv4_address }}'.

Firefox for Android has a DNS resolution [bug](https://bugzilla.mozilla.org/show_bug.cgi?id=947801) that affects VPN users who are running Android 4.4. The following workaround ensures that lookups can be performed successfully, even if you remain connected to the OpenVPN server for an extended period of time.

#### Configuring Firefox for Android to use the Dante SOCKS server ####
1. Open Firefox
2. Type "about:config" into the address bar and tap the 'Go' button on your keyboard
3. Type "proxy" into the search box
4. Set the value of 'network.proxy.socks' to '10.8.0.1'
5. Set the value of 'network.proxy.socks_port' to '1080'
6. Set the value of 'network.proxy.socks\_remote\_dns' to 'true'
7. Set the value of 'network.proxy.type' to '1'
