---
- name: Install obfsproxy and Tor
  apt: name={{ item }}
  with_items:
    - obfsproxy
    - tor

- name: Generate a random Nickname for the bridge
  shell: grep -v "'" /usr/share/dict/american-english | sort -R | tail -n 2 | xargs | sed -e 's/ //' | cut -c 1-16 > {{ tor_bridge_nickname_file }}
         creates={{ tor_bridge_nickname_file }}

- name: Register the bridge's random Nickname
  command: cat {{ tor_bridge_nickname_file }}
  register: tor_bridge_nickname

- name: Generate the bridge config file
  template: src=torrc.j2
            dest=/etc/tor/torrc
            owner=root
            group=root
            mode=644
  notify: Restart Tor

- name: Restart Tor so the obfsproxy ports and server fingerprint will be available in the state file
  command: service tor restart

- name: Wait until obfsproxy information has shown up in the state file
  wait_for: path=/var/lib/tor/state
            search_regex={{ item }}
  with_items: tor_obfs_transports

- name: Discover the randomly chosen obfs ports
  shell: grep {{ item }} /var/lib/tor/state | sed -e 's/^.*://'
  register: tor_obfs_ports
  with_items: tor_obfs_transports

- name: Discover the server fingerprint
  command: awk '{ print $2 }' /var/lib/tor/fingerprint
  register: tor_fingerprint

- name: Create the Tor documentation directory
  file: path={{ tor_doc_location }}
        mode=750
        state=directory

- name: Generate the Markdown Tor instructions
  template: src=instructions.md.j2
            dest={{ tor_markdown_instructions }}

- name: Convert the Markdown Tor instructions into HTML and surround them with the header and footer template
  shell: markdown {{ tor_markdown_instructions }} | cat {{ streisand_header_template }} - {{ streisand_footer_template }} > {{ tor_html_instructions }}

- name: Fetch the Tor HTML instructions
  fetch: dest={{ streisand_local_directory }}/tor/
         src={{ tor_html_instructions }}
         flat=yes
