---
- name: Generate self-signed SSL certificate and private key
  command: openssl req -new -nodes -x509 -out {{ nginx_self_signed_certificate }} -keyout {{ nginx_private_key }} -days {{ nginx_days_valid }} -subj "{{ nginx_request_subject }}/CN={{ streisand_ipv4_address }}"
           creates={{ nginx_private_key }}

- name: Generate a random Gateway password
  shell: grep -v "'" /usr/share/dict/american-english | sort -R | tail -n 4 | xargs | sed -e 's/ /-/g' > {{ streisand_gateway_password_file }}
         creates={{ streisand_gateway_password_file }}

- name: Register the Gateway password
  command: cat {{ streisand_gateway_password_file }}
  register: streisand_gateway_password

- name: Install the required package for the htpasswd command
  apt: name=apache2-utils

- name: Generate the htpasswd file
  command: htpasswd -b -c {{ streisand_gateway_htpasswd_file }} {{ streisand_gateway_username }} {{ streisand_gateway_password.stdout }}
           creates={{ streisand_gateway_htpasswd_file }}

- name: Set permissions on the SSL private key and the unhashed Gateway password file
  file: path={{ item }}
        owner=root
        group=root
        mode=640
  with_items:
    - "{{ nginx_private_key }}"
    - "{{ streisand_gateway_password_file }}"

- name: Register MITM mitigation fact (certificate serial number)
  command: openssl x509 -in {{ nginx_self_signed_certificate }} -noout -serial
  register: ssl_certificate_serial_number

- name: Register more MITM mitigation facts (fingerprints)
  command: openssl x509 -{{ item }} -in {{ nginx_self_signed_certificate }} -noout -fingerprint
  with_items:
    - sha256
    - sha1
    - md5
  register: ssl_certificate_fingerprints

- name: Generate the virtual host and restart Nginx if it is updated
  template: src=vhost.j2
            dest=/etc/nginx/sites-available/streisand
            owner=root
            group=root
            mode=644
  notify: Restart Nginx

- name: Enable the virtual host
  file: path=/etc/nginx/sites-enabled/streisand
        src=/etc/nginx/sites-available/streisand
        state=link

- name: Convert the self-signed SSL certificate into the right format for a data uri
  command: base64 --wrap=0 {{ nginx_self_signed_certificate }}
  register: streisand_certificate_data_uri

- name: Generate the Markdown Gateway index and instructions
  template: src={{ item.src }}
            dest={{ item.dest }}
  with_items:
    - { src: "index.md.j2",        dest: "{{ streisand_gateway_markdown_index }}" }
    - { src: "instructions.md.j2", dest: "{{ streisand_gateway_markdown_instructions }}" }

- name: Convert the Markdown Gateway index and instructions into HTML and surround them with the header and footer template
  shell: markdown {{ item.md }} | cat {{ streisand_header_template }} - {{ streisand_footer_template }} > {{ item.html }}
  with_items:
    - { md: "{{ streisand_gateway_markdown_index }}",        html: "{{ streisand_gateway_html_index }}" }
    - { md: "{{ streisand_gateway_markdown_instructions }}", html: "{{ streisand_gateway_html_instructions }}" }

- name: Fetch the Gateway HTML instructions and certificate
  fetch: dest={{ streisand_local_directory }}/
         src={{ item }}
         flat=yes
  with_items:
    - "{{ streisand_gateway_html_instructions }}"
    - "{{ nginx_self_signed_certificate }}"

- name: Clean up the temporary Gateway instruction files once they have been retrieved
  file: path={{ item }}
        state=absent
  with_items:
    - "{{ streisand_gateway_html_instructions }}"
    - "{{ streisand_gateway_markdown_instructions }}"

- name: Ensure that all of the files in the Gateway have the proper permissions
  file: path={{ streisand_gateway_location }}
        owner=www-data
        group=www-data
        mode=750
        state=directory
        recurse=yes

- name: Success!
  pause: prompt="Server setup is complete. The `{{ streisand_server_name }}.html` instructions file in the generated-docs folder is ready to give to family, friends, and fellow activists. Press Enter to open these instructions."

- name: Open the instructions (Linux)
  local_action: command xdg-open {{ streisand_local_directory }}/{{ streisand_server_name }}.html
  when: hostvars['127.0.0.1']['ansible_system'] == "Linux"
  sudo: no

- name: Open the instructions (OS X)
  local_action: command open {{ streisand_local_directory }}/{{ streisand_server_name }}.html
  when: hostvars['127.0.0.1']['ansible_system'] == "Darwin"
  sudo: no
